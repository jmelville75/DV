<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:2d215042-d2d9-4904-9a79-484dfd6a2f1a -->
<metadata name="rebindCheckPathExists" path="/shared/ASAssets/Utilities/repository/rebind/rebindCheckPathExists" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>rebindCheckPathExists;

	-- CIS Repository Helper Procedure --
    This procedure is used by both rebindFolder and rebindResource to check the existence of the rebind rules old and new paths.
    The rules are as follows:
      When the rebind rule list has 1 or more rules then it will use the &quot;rebindResource&quot; API because both the &quot;from&quot; and the &quot;to&quot; paths exist.
      When no paths match the &quot;from&quot; criteria or the &quot;from&quot; path does not exist then return null which will invoke the &quot;Replace Text Path&quot; methods.
      When the &quot;to&quot; path does not exist, the method will throw an exception since it is not permitted to rebind to a non-existent target folder


	Input:
		rebindVector - the list of rebindable resources used by a given resource.


	Output:
		outRebindVector - the list of rebindable resources used by a given resource.   null if the from path does not exist


	Exceptions:  
        System.NotFoundException - throws an exception if the to path does not exist.  Can&apos;t rebind to something that does not exist.


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/24/2013		Mike Tinius			5.2.0			Created new


    (c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

</annotation>
  <parameters>
    <parameter name="rebindVector" direction="IN" nullable="true">
      <datatype name="rebindVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="rebindRow" type="TREE" refId="1">
            <element name="oldPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="oldType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="newPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="newType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="outRebindVector" direction="OUT" nullable="true">
      <datatype name="rebindVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="rebindRow" type="TREE" refId="1">
            <element name="oldPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="oldType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="newPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="newType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    rebindCheckPathExists;

	-- CIS Repository Helper Procedure --
    This procedure is used by both rebindFolder and rebindResource to check the existence of the rebind rules old and new paths.
    The rules are as follows:
      When the rebind rule list has 1 or more rules then it will use the &quot;rebindResource&quot; API because both the &quot;from&quot; and the &quot;to&quot; paths exist.
      When no paths match the &quot;from&quot; criteria or the &quot;from&quot; path does not exist then return null which will invoke the &quot;Replace Text Path&quot; methods.
      When the &quot;to&quot; path does not exist, the method will throw an exception since it is not permitted to rebind to a non-existent target folder


	Input:
		rebindVector - the list of rebindable resources used by a given resource.


	Output:
		outRebindVector - the list of rebindable resources used by a given resource.   null if the from path does not exist


	Exceptions:  
        System.NotFoundException - throws an exception if the to path does not exist.  Can&apos;t rebind to something that does not exist.


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/24/2013		Mike Tinius			5.2.0			Created new
	03/01/2018		Mike Tinius			7.0.5			Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists

	(c) 2017 TIBCO Software Inc.  All rights reserved.
	
	Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
	The details can be found in the file LICENSE.
	
	The following proprietary files are included as a convenience, and may not be used except pursuant
	to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
	csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
	csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
	and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
	are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
	
	This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
	If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
	agreement with TIBCO.

*/
PROCEDURE rebindCheckPathExists(
	IN  rebindVector 		/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindVector,
	IN 	debug				CHAR(1),
	OUT outRebindVector 	/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindVector
)
BEGIN
	DECLARE moduleName		VARCHAR DEFAULT &apos;rebindCheckPathExists&apos;;
	DECLARE i				INTEGER DEFAULT 1;
	DECLARE j				INTEGER DEFAULT 0;
	DECLARE rebindRow 		/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindRow;
	DECLARE resourceExists 	BOOLEAN;

	rebindLoop:
	WHILE (i &lt;= CARDINALITY(rebindVector)) DO
		set rebindRow = rebindVector[i];
		-- If both the old resource path and the new resource path exist then this is a &quot;rebindable&quot; resource
		call /lib/resource/ResourceExists(rebindRow.oldPath, rebindRow.oldType, null, resourceExists);
		if (resourceExists) then
		 	call /lib/resource/ResourceExists(rebindRow.newPath, rebindRow.newType, null, resourceExists);
			if (resourceExists) then
				if (j = 0) then
					set outRebindVector = VECTOR[(null)];
					set j = j + 1;
					set outRebindVector[i] = rebindRow;
				else
					set outRebindVector = EXTEND(outRebindVector,1);
					set j = j + 1;
					set outRebindVector[j] = rebindRow;
				end if;
			else
				raise System.NotFoundException value &apos;The target &quot;new path&quot;=[&apos;||emptyStr(rebindRow.newPath)||&apos;] and &quot;new type&quot;=[&apos;||emptyStr(rebindRow.newType)||&apos;] does not exist.&apos;;
			end if;
		else
			set outRebindVector = null;
			leave rebindLoop;
		end if;
		set i = i + 1;
	END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1523934105785</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:0:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:1:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/75</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>